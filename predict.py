# -*- coding: utf-8 -*-
"""Predict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y8AQFaTu0IbmcGvKMORh_wa7c6hHeRn_
"""

# import sklearn
# sklearn.__version__





# import torchvision
import torch
# from torch.utils.data import DataLoader, Dataset
import torchvision.transforms as T
import numpy as np
# from sklearn.preprocessing import LabelEncoder
# import torch.nn as nn
# from torchvision.models import vgg16
# from sklearn.model_selection import train_test_split
# import torch.nn.functional as Fun
import cv2
import torch
import torch.nn as nn
import torchvision


disease = [
    'akiec',
    'bcc',
    'bkl',
    'df',
    'mel',
    'nv',
    'vasc'
]



def disease_mapper(disease_id):
    
    data = [
        {
            'short_name':'akiec',
            'name': "Actinic keratoses and intraepithelial carcinoma / Bowen's disease",
            'description': 'A type of precancerous skin lesion caused by excessive sun exposure.',
            'symptoms': ['Rough, scaly patches of skin', 'Lesions that are pink, red, or brown in color', 'Lesions that may be itchy or painful'],
            'causes': ['Excessive sun exposure, particularly in individuals with fair skin.'],
            'prevention': 'Using sun protection measures, such as wearing protective clothing and using sunscreen with a high SPF.'
        },
        {
            'short_name':'bcc',
            'name': 'Basal cell carcinoma',
            'description': 'A type of skin cancer that develops in the basal cells, which are located in the lower part of the epidermis.',
            'symptoms': ['A pearly or waxy bump on the skin', 'A flat, flesh-colored or brown scar-like lesion', 'A sore that bleeds or develops a crust'],
            'causes': ['Excessive sun exposure, particularly in individuals with fair skin.'],
            'prevention': 'Using sun protection measures, such as wearing protective clothing and using sunscreen with a high SPF.'
        },
        {
            'short_name':'bkl',
            'name': 'Benign keratosis-like lesions (solar lentigines / seborrheic keratoses and lichen-planus like keratoses)',
            'description': 'A type of benign skin lesion that is caused by excessive sun exposure.',
            'symptoms': ['Rough, scaly patches of skin', 'Lesions that are brown or black in color', 'Lesions that may be itchy or painful'],
            'causes': ['Excessive sun exposure, particularly in individuals with fair skin.'],
            'prevention': 'Using sun protection measures, such as wearing protective clothing and using sunscreen with a high SPF.'
        },
        {
            'short_name':'df',
            'name': 'Dermatofibroma',
            'description': 'A benign skin lesion that is characterized by a fibrous growth on the skin.',
            'symptoms': ['A small, hard bump on the skin', 'A bump that is pink, brown, or purple in color', 'A bump that may be itchy or painful'],
            'causes': ['Unknown, but may be related to trauma to the skin.'],
            'prevention': 'Avoiding trauma to the skin by using proper protective gear and being careful during activities that may cause injury.'
        },
        {
            'short_name':'mel',
            'name': 'Melanoma',
            'description': 'A type of skin cancer that develops in the cells that produce pigment in the skin.',
            'symptoms': ['A mole that is changing in size, shape, or color', 'A mole that is asymmetrical', 'A mole that has uneven color or more than one color'],
            'causes': ['Excessive sun exposure, particularly in individuals with fair skin.'],
            'prevention': 'Using sun protection measures, such as wearing protective clothing and using sunscreen with a high SPF.'
        },
        {
            'short_name': 'nv',
            'name': 'Melanocytic nevi',
            'description': 'Benign tumors of the pigment cells that can appear as dark spots on the skin.',
            'symptoms': ['A dark spot on the skin', 'A mole that changes in size, shape, or color', 'Itchy or painful mole'],
            'causes': ['The exact cause of melanocytic nevi is not known, but they are thought to be caused by a combination of genetic and environmental factors. Sun exposure and having a family history of melanoma can increase the risk of developing melanocytic nevi.'],
            'prevention': 'Limiting sun exposure, using sunscreen, and regularly checking for changes in existing moles or the development of new moles can help reduce the risk of developing melanocytic nevi.'
        },
        {
            'short_name':'vasc',
            'name': 'Vascular lesions (angiomas, angiokeratomas, pyogenic granulomas and hemorrhage)',
            'description': 'A type of benign skin lesion that is characterized by an abnormal growth of blood vessels.',
            'symptoms': ['A red or purple bump or patch on the skin', 'Lesions that may be itchy or painful', 'Lesions that may bleed easily'],
            'causes': ['Unknown, but may be related to genetics or hormonal changes.'],
            'prevention': 'Unknown, as the causes of these lesions are largely unknown. However, avoiding sun exposure, injury or irritation of the lesion and keeping the area dry and clean is advisable.'
        },
    ]
  
    return data[disease_id]

transforms = T.Compose(
        [T.ToTensor(),
        T.Normalize(mean=[0.485,
           0.456, 0.406],std=[0.229, 0.224, 0.225])]
        )

    
def read_transform(img):
        f = img
        im = cv2.imread(f)
        im = cv2.resize(im, (224,224))
        im = transforms(im)
        return torch.tensor(im,dtype=torch.float).to('cpu')


def get_model():
    class NeuralNetwork(nn.Module):
        def __init__(self):
          super(NeuralNetwork, self).__init__()
          self.model = torchvision.models.vgg16(pretrained=True)
          for param in self.model.features.parameters():
                        param.requires_grad = False


          self.numeric_features_ = nn.Sequential(
              nn.Linear(3,64),
              nn.ReLU(inplace=True),
              nn.Dropout(),
          )
          
          self.combined_ = nn.Sequential(
              nn.Linear(64 + 1000, 512),
              nn.ReLU(inplace=True),
              nn.Dropout(),
              nn.Linear(512, 128),
              nn.ReLU(inplace=True),
              nn.Dropout(),
              nn.Linear(128, 7),
              nn.Softmax()
          )

        def forward(self, input1, age):
          image_features = self.model(input1)
          numerical_features = self.numeric_features_(torch.tensor((age)))
          # numerical_features = numerical_features.view(numerical_features.size(0), -1)
          combined_features = torch.hstack((image_features, numerical_features.reshape(-1,64)))
          return self.combined_(combined_features)

          
    model = NeuralNetwork()
    model = model.to('cpu')
    return model


def load_model(model_path):
  model = get_model()
  state_dict = torch.load(model_path,map_location=torch.device('cpu'))
  return model,state_dict



def predict(image, sex, location, age):
  img = read_transform(image)
  img = img.to('cpu')
  tabular = [sex, location, age]
  tabular = torch.Tensor(tabular).to(torch.float)
  model, state_dict = load_model('model/model.pth')
  model.load_state_dict(state_dict)
  output = model(img.unsqueeze_(0), tabular.unsqueeze_(0))
  pred, conf = output.max(-1)
  # return conf.item(), pred
  return disease_mapper(conf.item())

# predict('image_path', 'sex', 'location', 'age')


# print(predict('images/test.jpg', 0, 2, 40))